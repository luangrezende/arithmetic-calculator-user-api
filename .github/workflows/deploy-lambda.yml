name: Deploy to AWS Lambda

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  DOTNET_VERSION: '8.0'

jobs:
  deploy:
    name: Build and Deploy to Lambda
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install AWS Lambda Tools
      run: dotnet tool install -g Amazon.Lambda.Tools

    - name: Add .NET Tools to PATH
      run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run Unit Tests
      env:
        PROMOTIONAL_AMOUNT: "100"
        JWT_SECRET_KEY: "test-secret-key-for-unit-tests-only"
        MYSQL_CONNECTION_STRING: "Server=localhost;Database=test;User=test;Password=test;"
      run: |
        echo "Running unit tests..."
        dotnet test --configuration Release --no-build --verbosity normal --logger trx --results-directory ./test-results
        echo "All tests passed successfully!"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: ./test-results/*.trx

    - name: Build and Package Lambda
      working-directory: src/ArithmeticCalculatorUserApi.Presentation
      run: dotnet lambda package --configuration Release --output-package deployment-package.zip

    - name: Deploy to Lambda
      run: |
        if aws lambda get-function --function-name ArithmeticCalculatorUserApi > /dev/null 2>&1; then
          echo "Updating Lambda function code"
          aws lambda update-function-code \
            --function-name ArithmeticCalculatorUserApi \
            --zip-file fileb://src/ArithmeticCalculatorUserApi.Presentation/deployment-package.zip
          
          echo "Waiting for function update to complete..."
          aws lambda wait function-updated \
            --function-name ArithmeticCalculatorUserApi
          
          echo "Updating Lambda function configuration"
          aws lambda update-function-configuration \
            --function-name ArithmeticCalculatorUserApi \
            --timeout 60 \
            --memory-size 1024 \
            --environment Variables="{MYSQL_CONNECTION_STRING=${{ secrets.MYSQL_CONNECTION_STRING }},JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}}"
        else
          echo "Creating Lambda function"
          aws lambda create-function \
            --function-name ArithmeticCalculatorUserApi \
            --runtime dotnet8 \
            --role "${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }}" \
            --handler ArithmeticCalculatorUserApi.Presentation::ArithmeticCalculatorUserApi.Presentation.Function::FunctionHandler \
            --zip-file fileb://src/ArithmeticCalculatorUserApi.Presentation/deployment-package.zip \
            --timeout 60 \
            --memory-size 1024 \
            --environment Variables="{MYSQL_CONNECTION_STRING=${{ secrets.MYSQL_CONNECTION_STRING }},JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}}"
        fi
